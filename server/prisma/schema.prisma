// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
    profilePic String?  

  products  Product[]
  cart      Cart[]
  purchases Purchase[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
}

model Product {
  id          Int              @id @default(autoincrement())
  title       String
  description String
  price       Float
  quantity    Int              @default(0)
  createdAt   DateTime         @default(now())

  ownerId     Int
  owner       User             @relation(fields: [ownerId], references: [id])

  categoryId  Int
  category    String?

  images      ProductImage[]
  attributes  ProductAttribute[]

  cartItems   Cart[]
  purchases   Purchase[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model ProductAttribute {
  id        Int     @id @default(autoincrement())
  key       String
  value     String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int      @default(1)

  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Purchase {
  id         Int      @id @default(autoincrement())
  userId     Int
  productId  Int
  quantity   Int      @default(1)
  purchasedAt DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}
